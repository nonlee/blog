{"remainingRequest":"D:\\work\\blog\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!D:\\work\\blog\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??ref--6!D:\\work\\blog\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\work\\blog\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\work\\blog\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!D:\\work\\blog\\docs\\handbook\\x86-64体系下一个奇怪问题的定位.md?vue&type=template&id=d75d2702&","dependencies":[{"path":"D:\\work\\blog\\docs\\handbook\\x86-64体系下一个奇怪问题的定位.md","mtime":1681902917559},{"path":"D:\\work\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681908601315},{"path":"D:\\work\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681908601315},{"path":"D:\\work\\blog\\node_modules\\babel-loader\\lib\\index.js","mtime":1681908601231},{"path":"D:\\work\\blog\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1681908601976},{"path":"D:\\work\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681908601315},{"path":"D:\\work\\blog\\node_modules\\vue-loader\\lib\\index.js","mtime":1681908601976},{"path":"D:\\work\\blog\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":1681908601536}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHsKICB2YXIgX3ZtID0gdGhpcywKICAgIF9jID0gX3ZtLl9zZWxmLl9jOwogIHJldHVybiBfYygnQ29udGVudFNsb3RzRGlzdHJpYnV0b3InLCB7CiAgICBhdHRyczogewogICAgICAic2xvdC1rZXkiOiBfdm0uJHBhcmVudC5zbG90S2V5CiAgICB9CiAgfSwgW19jKCdwJywgW192bS5fdigi5L2c6ICF77ya5byg5rSLIildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW19jKCdhJywgewogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiaHR0cDovL2Jsb2cuY29kaW5nbGFicy5vcmcvYXJ0aWNsZXMvdHJvdWJsZS1vZi14ODYtNjQtcGxhdGZvcm0uaHRtbCIsCiAgICAgICJ0aXRsZSI6ICLljp/mlofpk77mjqUiLAogICAgICAidGFyZ2V0IjogIl9ibGFuayIsCiAgICAgICJyZWwiOiAibm9vcGVuZXIgbm9yZWZlcnJlciIKICAgIH0KICB9LCBbX3ZtLl92KCLljp/mlofpk77mjqUiKSwgX2MoJ091dGJvdW5kTGluaycpXSwgMSldKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigi6Zeu6aKY5p2l5rqQ5LqO5LiA5Liq5pyL5Y+L5Zyo55m+5bqm55qE56yU6K+V6aKY44CC5LiK5ZGo5YWt5oiR5LiA5Liq5pyL5Y+L5Y+C5Yqg5LqG55m+5bqm5Li+6KGM55qE5LiT5Zy65oub6IGY5Lya77yM5YW25Lit56ys5LiA6YGT56yU6K+V6aKY5piv6L+Z5qC355qE77yaIildKSwgX3ZtLl92KCIgIiksIF9jKCdoMycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICLnu5nlh7rkuIvpnaLkuIDmrrXku6PnoIEiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiPnu5nlh7rkuIvpnaLkuIDmrrXku6PnoIEiCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIOe7meWHuuS4i+mdouS4gOauteS7o+eggSIpXSksIF92bS5fdigiICIpLCBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJsYW5ndWFnZS0gZXh0cmEtY2xhc3MiCiAgfSwgW19jKCdwcmUnLCB7CiAgICBwcmU6IHRydWUsCiAgICBhdHRyczogewogICAgICAiY2xhc3MiOiAibGFuZ3VhZ2UtdGV4dCIKICAgIH0KICB9LCBbX2MoJ2NvZGUnLCBbX3ZtLl92KCIjaW5jbHVkZSA8c3RkaW8uaD5cbm1haW4oKSB7XG4gICAgZG91YmxlIGEgPSAxMDsgXG4gICAgcHJpbnRmKFwiYSA9ICVkXFxuXCIsIGEpOyBcbn1cbiIpXSldKV0pLCBfYygncCcsIFtfdm0uX3YoIuivt+mXruS7o+eggeeahOi/kOihjOe7k+aenOS7peWPiuWOn+WboOOAgiIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfdm0uX3YoIuW9k+aci+WPi+WPguWKoOWujOeslOivleWSjOaIkeiBiui1t+i/memBk+mimOaXtu+8jOaIkeesrOS4gOWPjeW6lOaYr+i/memBk+mimOiAg+Wvn+eahOaYr+a1rueCueaVsOeahOWGheWtmOihqOekuu+8jOW9k+eEtu+8jOWcqOS4jeWQjOeahENQVeS9k+ezu+S4i++8jOi/kOihjOe7k+aenOWPr+iDveS8muacieaJgOS4jeWQjO+8jOS4u+imgeaYr+WPl0NQVeS9jeaVsOWSjOWtl+iKguW6j+eahOW9seWTjeOAgiIpXSksIF92bS5fdigiICIpLCBfYygnaDMnLCB7CiAgICBhdHRyczogewogICAgICAiaWQiOiAi5pyA5Yid5YiG5p6QIgogICAgfQogIH0sIFtfYygnYScsIHsKICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICBhdHRyczogewogICAgICAiaHJlZiI6ICIj5pyA5Yid5YiG5p6QIgogICAgfQogIH0sIFtfdm0uX3YoIiMiKV0pLCBfdm0uX3YoIiDmnIDliJ3liIbmnpAiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3AnLCBbX3ZtLl92KCLkuI3lpqjku6Xnm67liY3mnIDmma7pgY3nmoR4ODYtNjTkvZPns7vvvIg2NOS9je+8jOWwj+err+W6j++8ieiAg+iZkeatpOmXrumimOOAguWcqDY05L2N5py65Zmo5LiK77yMZG91Ymxl5piv56ym5ZCISUVFRTc1NOagh+WHhueahOWPjOeyvuW6pua1rueCueaVsOOAguagueaNrklFRUXmoIflh4bvvIzlj4znsr7luqbmta7ngrnmlbDnlLE45Liq5a2X6IqC5YWxNjTkvY3nu4TmiJDvvIzlhbbkuK3mnIDpq5jkvY3kuLrnrKblj7fkvY3vvIzmrKHpq5jnmoQxMeS9jeS4uuaMh+aVsOS9je+8jOS9meS4i+eahDUy5L2N5Li65bC+5pWw5L2N44CC56S65oSP6KeB5LiL5Zu+77yaIildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW19jKCdpbWcnLCB7CiAgICBhdHRyczogewogICAgICAic3JjIjogImh0dHA6Ly9oLm5vbmxlZS5jb206OTAwOS9ub25sZWUvMjAyMzA0MTkxOTEyMTkucG5nIiwKICAgICAgImFsdCI6ICIiCiAgICB9CiAgfSldKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigi5ZCE5L2N5q615oSP5LmJ5aaC5LiL77yaIildKSwgX3ZtLl92KCIgIiksIF9jKCd1bCcsIFtfYygnbGknLCBbX3ZtLl92KCJTID0gMOihqOekuuato+aVsO+8jFMgPSAx6KGo56S66LSf5pWw44CCIildKSwgX3ZtLl92KCIgIiksIF9jKCdsaScsIFtfdm0uX3YoIkXlj6/ku6XnnIvmiJDkuIDkuKrml6DnrKblj7fmlbTmlbDvvIzlvZPlhbbkuozov5vliLbkvY3kuLrlhagw5oiW5YWoMeaXtu+8jOihqOekuumdnuinhOe6pua1rueCueaVsOaIlueJueauiuWAvO+8jOatpOWkhOS4jeiuqOiuuu+8jOS7heiuqOiuuuWFtuS4jeWFqOS4ujDmiJblhajkuLox55qE5oOF5Ya144CC5b2TReS4jeWFqOS4uumbtuaIluWFqOS4ujHml7bvvIzmta7ngrnmlbDmmK/op4TnuqbnmoTvvIzmraTml7ZF6KGo56S65LulMuS4uuW6leeahOaMh+aVsOWKoOS4iuS4gOS4quWbuuWumueahOWBj+enu+mHj+OAguWBj+enu+mHj+iiq+WumuS5ieS4ujIoRSniiJIx4oiSMe+8jOWFtuS4rShFKeihqOekukXmiYDljaDnmoTmr5TnibnmlbDvvIzmraTlpITkuLoxMe+8jOaJgOS7peWBj+enu+mHj+S4ujIoMTEp4oiSMeKIkjE9MTAyM+OAguWboOatpOWunumZheeahOaMh+aVsOWAvOimgeWcqEXnmoTln7rnoYDkuIrlh48xMDIz77yM5L6L5aaCReeahOS9jeihqOekuuaYrzEwMDAwMDAwMDAw77yI5Y2B6L+b5Yi2MTAyNO+8ie+8jOWImeihqOekuuWunumZheaMh+aVsOWAvOS4ujEwMjTiiJIxMDIzPTHjgIIiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2xpJywgW192bS5fdigiTeWcqOinhOe6puW9ouW8j+S4i++8jOihqOekuuS4gOS4quS6jOi/m+WItuWwj+aVsO+8jOWunumZheWAvOaYr+i/meS4quWwj+aVsOWKoDHjgILkvovlpoLvvIxNPTEwMTAwMOKApjDooajnpLoy4oiSMSsy4oiSMysxPTEuNjI144CCIildKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3AnLCBbX3ZtLl92KCLkuIDkuKrop4TnuqbnmoRJRUVF5Y+M57K+5bqm5rWu54K55pWw55qE5a6e6ZmF5YC85Li677yaIildKSwgX3ZtLl92KCIgIiksIF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImxhbmd1YWdlLW1hdGggZXh0cmEtY2xhc3MiCiAgfSwgW19jKCdwcmUnLCB7CiAgICBwcmU6IHRydWUsCiAgICBhdHRyczogewogICAgICAiY2xhc3MiOiAibGFuZ3VhZ2UtdGV4dCIKICAgIH0KICB9LCBbX2MoJ2NvZGUnLCBbX3ZtLl92KCJWPSjiiJIxKVPDlzJF4oiSMTAyM8OXKDErTSlcbiIpXSldKV0pLCBfYygncCcsIFtfdm0uX3YoIuagueaNruS7peS4iuWIhuaekO+8jDEw5Y+v5Lul6KGo56S65Li6MS4yNcOXOO+8jOWboOatpOWPllMgPSAw77yMRSA9IDEwMDAwMDAwMDEw77yMTSA9IDAxMDDigKYw77yM5YiZ5pW05Liq5rWu54K55pWw55qE5LqM6L+b5Yi26KGo56S65Li677yaIildKSwgX3ZtLl92KCIgIiksIF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImxhbmd1YWdlLSBleHRyYS1jbGFzcyIKICB9LCBbX2MoJ3ByZScsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJsYW5ndWFnZS10ZXh0IgogICAgfQogIH0sIFtfYygnY29kZScsIFtfdm0uX3YoIjAxMDAwMDAwLCAwMDEwMDEwMCwgMDAwMDAwMDAsIDAwMDAwMDAwLCAwMDAwMDAwMCwgMDAwMDAwMDAsIDAwMDAwMDAwLCAwMDAwMDAwMFxuIildKV0pXSksIF9jKCdwJywgW192bS5fdigi5Li65LqG5L6/5LqO6KeC5a+f5oiR5Zyo5q+POGJpdOS5i+mXtOaPkuWFpeS6huWIhumalOespuOAguW9k3ByaW50ZuS9v+eUqOKAnCVk4oCd6L6T5Ye65pe277yM55Sx5LqOaW5057G75Z6L5pivNOWtl+iKgu+8jOaJgOS7peWPquiDveWPluWFtuS4reWbm+S4quWtl+iKguOAguW9k2HooqvlvZPlgZrlj4LmlbDkvKDpgJLnu5lwcmludGbml7bvvIzmnInkuKTnp43lj6/og73kv53lrZhh55qE5Zyw5pa577ya5a+E5a2Y5Zmo5oiW5qCI5bin5Lit44CCIildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigi5aaC5p6c5piv5a+E5a2Y5Zmo77yM5YiZcHJpbnRm5Lya5Y+W5L2O5Zub5a2X6IqC44CCIildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigi5aaC5p6c5piv5qCI77yM5Zyo5bCP56uv5bqP5Lit77yM6auY5a2X6IqC5a2Y5pS+5Zyo6auY5Zyw5Z2A77yM5L2O5a2X6IqC5pS+5Zyo5L2O5Zyw5Z2A77yM6ICM5qCI5piv5LuO6auY5Zyw5Z2A5ZCR5L2O5Zyw5Z2A5aKe6ZW/55qE77yM5omA5Lul5YWl5qCI5ZCO5q+P5Liq5a2X6IqC55qE5L2N572u5aaC5LiL77yaIildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW19jKCdpbWcnLCB7CiAgICBhdHRyczogewogICAgICAic3JjIjogImh0dHA6Ly9oLm5vbmxlZS5jb206OTAwOS9ub25sZWUvMjAyMzA0MTkxOTEzMDIucG5nIiwKICAgICAgImFsdCI6ICIiCiAgICB9CiAgfSldKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigicHJpbnRm5Lya5LuO5L2O5Zyw5Z2A5Yiw6auY5Zyw5Z2A6K+75Y+WNOS4quWtl+iKguW9k+WBmmludOWei+aVsOaNruWOu+ino+mHiuW5tui+k+WHuu+8jOaJgOS7pe+8jOe7j+i/h+WIhuaekOi/meauteS7o+eggeeahOi+k+WHuuW6lOivpeS4uuKAnGEgPSAw4oCd44CCIildKSwgX3ZtLl92KCIgIiksIF9jKCdoMycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICLlpYfmgKrnmoTnu5PmnpwiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiPlpYfmgKrnmoTnu5PmnpwiCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIOWlh+aAqueahOe7k+aenCIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfdm0uX3YoIuWIhuaekOWujOS6hu+8jOS4i+S4gOatpeW9k+eEtuaYr+mAmui/h+Wunui3temqjOivge+8jOaIkeWcqOaIkeeahFZQU+S4iu+8iENlbnRPUyA2NOS9je+8ieeUqGdjY+e8luivkeOAgue7k+aenOmdnuW4uOWHuuS5juaEj+aWme+8jOS4jeS9huS4jeaYrzDvvIzogIzkuJTmr4/mrKHov5DooYznmoTnu5Pmnpzpg73kuI3kuIDmoLfvvIHvvIjop4HkuIvlm77vvIkiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3AnLCBbX2MoJ2ltZycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJzcmMiOiAiaHR0cDovL2gubm9ubGVlLmNvbTo5MDA5L25vbmxlZS8yMDIzMDQxOTE5MTMyOS5wbmciLAogICAgICAiYWx0IjogIiIKICAgIH0KICB9KV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2gzJywgewogICAgYXR0cnM6IHsKICAgICAgImlkIjogIuWumuS9jemXrumimCIKICAgIH0KICB9LCBbX2MoJ2EnLCB7CiAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiI+WumuS9jemXrumimCIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIg5a6a5L2N6Zeu6aKYIildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigi5Zyo6K+V5Zu+6Kej6YeK6L+Z5Liq5aWH5oCq546w6LGh5pe277yM5oiR5pyA5Yid5LuOQ+eahOWxgumdouS4iui/m+ihjOS6huivuOWkmuWIhuaekO+8jOe7k+aenOmDveaXoOazleWIhuaekOWHuumXrumimOaJgOWcqO+8jOaJgOS7peaIkeaAgOeWkeWHuueOsOi/meS4qumXrumimOeahOWOn+WboOWcqOacuuWZqOS7o+eggeWxgumdouOAguS6juaYr+aIkeWwhuWFtuaxh+e8luS7o+eggeaJk+WHuuadpe+8miIpXSksIF92bS5fdigiICIpLCBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJsYW5ndWFnZS0gZXh0cmEtY2xhc3MiCiAgfSwgW19jKCdwcmUnLCB7CiAgICBwcmU6IHRydWUsCiAgICBhdHRyczogewogICAgICAiY2xhc3MiOiAibGFuZ3VhZ2UtdGV4dCIKICAgIH0KICB9LCBbX2MoJ2NvZGUnLCBbX3ZtLl92KCIuZmlsZSAgIFwiZG91YmxlX2FzX2ludC5jXCJcbi5zZWN0aW9uICAgIC5yb2RhdGEuc3RyMS4xLFwiYU1TXCIsQHByb2diaXRzLDFcbi5MQzE6XG4uc3RyaW5nIFwiYSA9ICVkXFxuXCJcbi50ZXh0XG4uZ2xvYmwgbWFpblxuLnR5cGUgICBtYWluLCBAZnVuY3Rpb25cbm1haW46XG4uTEZCMTE6XG4uY2ZpX3N0YXJ0cHJvY1xuc3VicSAgICAkOCwgJXJzcFxuLmNmaV9kZWZfY2ZhX29mZnNldCAxNlxubW92c2QgICAuTEMwKCVyaXApLCAleG1tMFxubW92bCAgICAkLkxDMSwgJWVkaVxubW92bCAgICAkMSwgJWVheFxuY2FsbCAgICBwcmludGZcbmFkZHEgICAgJDgsICVyc3Bcbi5jZmlfZGVmX2NmYV9vZmZzZXQgOFxucmV0IFxuLmNmaV9lbmRwcm9jXG4uTEZFMTE6XG4uc2l6ZSAgIG1haW4sIC4tbWFpblxuLnNlY3Rpb24gICAgLnJvZGF0YS5jc3Q4LFwiYU1cIixAcHJvZ2JpdHMsOFxuLmFsaWduIDhcbi5MQzA6XG4ubG9uZyAgIDAgICBcbi5sb25nICAgMTA3NjEwMTEyMFxuLmlkZW50ICBcIkdDQzogKEdOVSkgNC40LjYgMjAxMjAzMDUgKFJlZCBIYXQgNC40LjYtNClcIlxuLnNlY3Rpb24gICAgLm5vdGUuR05VLXN0YWNrLFwiXCIsQHByb2diaXRzXG4iKV0pXSldKSwgX2MoJ3AnLCBbX3ZtLl92KCLkuLrkuobmlrnkvr/lr7nmr5TvvIzmiJHph43mlrDlhpnkuobkuIvpnaLnmoRD5Luj56CB77yaIildKSwgX3ZtLl92KCIgIiksIF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImxhbmd1YWdlLSBleHRyYS1jbGFzcyIKICB9LCBbX2MoJ3ByZScsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJsYW5ndWFnZS10ZXh0IgogICAgfQogIH0sIFtfYygnY29kZScsIFtfdm0uX3YoIiNpbmNsdWRlIDxzdGRpby5oPlxuIFxubWFpbigpIHtcbiAgICBpbnQgYSA9IDEwOyBcbiAgICBwcmludGYoXCJhID0gJWRcXG5cIiwgYSk7IFxufVxuIildKV0pXSksIF9jKCdwJywgW192bS5fdigi5YW25rGH57yW5Li677yaIildKSwgX3ZtLl92KCIgIiksIF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImxhbmd1YWdlLSBleHRyYS1jbGFzcyIKICB9LCBbX2MoJ3ByZScsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJsYW5ndWFnZS10ZXh0IgogICAgfQogIH0sIFtfYygnY29kZScsIFtfdm0uX3YoIi5maWxlICAgXCJpbnRfYXNfaW50LmNcIlxuLnNlY3Rpb24gICAgLnJvZGF0YS5zdHIxLjEsXCJhTVNcIixAcHJvZ2JpdHMsMVxuLkxDMDpcbi5zdHJpbmcgXCJhID0gJWRcXG5cIlxuLnRleHRcbi5nbG9ibCBtYWluXG4udHlwZSAgIG1haW4sIEBmdW5jdGlvblxubWFpbjpcbi5MRkIxMTpcbi5jZmlfc3RhcnRwcm9jXG5zdWJxICAgICQ4LCAlcnNwXG4uY2ZpX2RlZl9jZmFfb2Zmc2V0IDE2XG5tb3ZsICAgICQxMCwgJWVzaVxubW92bCAgICAkLkxDMCwgJWVkaVxubW92bCAgICAkMCwgJWVheFxuY2FsbCAgICBwcmludGZcbmFkZHEgICAgJDgsICVyc3Bcbi5jZmlfZGVmX2NmYV9vZmZzZXQgOFxucmV0IFxuLmNmaV9lbmRwcm9jXG4uTEZFMTE6XG4uc2l6ZSAgIG1haW4sIC4tbWFpblxuLmlkZW50ICBcIkdDQzogKEdOVSkgNC40LjYgMjAxMjAzMDUgKFJlZCBIYXQgNC40LjYtNClcIlxuLnNlY3Rpb24gICAgLm5vdGUuR05VLXN0YWNrLFwiXCIsQHByb2diaXRzXG4iKV0pXSldKSwgX2MoJ3AnLCBbX3ZtLl92KCLlsIbms6jmhI/lipvpm4bkuK3lnKhtYWlu5Ye95pWw5Lit6LCD55SocHJpbnRm5LmL5YmN55qE6KGM5Li677yM5Y+v5Lul55yL5Yiw77yM5Zyo56ys5LiA5q615Luj56CB5Lit77yMTEMw5pyJ5Liq5bi45pWwMTA3NjEwMTEyMO+8jOWwhuWFtui9rOaNouS4uuS6jOi/m+WItuWImuWlveaYr+aIkeS7rOS4iumdouWIhuaekOeahOWPjOeyvuW6pjEw55qE5LqM6L+b5Yi26KGo56S677yM6ICM5rGH57yW5Luj56CB5bCG6L+Z5Liq5pWw6YCB5YWl5LqG5LiA5Liq5Y+reG1tMOWvhOWtmOWZqOOAgumAmui/h+afpemYhXg4Ni02NOWkhOeQhuWZqOeahOebuOWFs+i1hOaWme+8jOefpemBk+i/meS4quWvhOWtmOWZqOWSjFNJTUTvvIjljZXmjIfku6TlpJrmlbDmja7mtYHvvInmianlsZXmjIfku6Tpm4bmnInlhbPjgILnroDljZXmnaXor7TvvIzlnKg2NOS9jeaTjeS9nOezu+e7n+S4i++8jHg4Ni02NOmAmui/h1NJTUTmnLrliLbmj5Dpq5jmta7ngrnov5Dnrpfog73lipvvvIzmiYDku6Vkb3VibGXnsbvlnovnmoRh6KKr6YCB5YWl5LqGeG1tMO+8iFNJTUTkvJrnlKjliLA45LiqMTI4Yml05a+E5a2Y5Zmo77yMeG1tMCAtIHhtbTfvvInjgIIiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3AnLCBbX3ZtLl92KCLlr7nmr5TkuIDkuIvnrKzkuozmrrXku6PnoIHvvIzlvZNh6KKr5aOw5piO5pivaW5057G75Z6L5pe277yM56uL5Y2z5pWwMTDooqvpgIHlhaXkuoZlc2nvvIjkuIDkuKrpgJrnlKjlr4TlrZjlmajvvIzlnKg2NOS9jUNQVeS4reihqOekunJzaeeahOS9jjMy5L2N77yJ44CC5YW25a6D6YOo5YiG5Ly85LmO5rKh5pyJ5Yy65Yir44CCIildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigi6YCa6L+H5a+55q+U77yM5oiR54yc5rWLNjTkvY3mk43kvZzns7vnu5/kuIvnlLHkuo7lkK/nlKjkuoZTSU1E77yM5rWu54K55pWw5Lya6KKr6YCB5YWlbW145a+E5a2Y5Zmo77yM6ICM5pW05b2i5Lya6KKr6YCB5YWl6YCa55So5a+E5a2Y5Zmo44CC5Li65LqG6K+B5a6e5oiR55qE5oOz5rOV77yM5oiR5p+l6ZiF5LqGeDg2LTY055qEQUJJ5paH5qGj77yM5Zyo4oCcMy4yLjMgUGFyYW1ldGVyIFBhc3NpbmfigJ3kuIDlsI/oioLmib7liLDkuoblpoLkuIvnmoTmloflrZfvvJoiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3VsJywgW19jKCdsaScsIFtfdm0uX3YoIklOVEVHRVIgVGhpcyBjbGFzcyBjb25zaXN0cyBvZiBpbnRlZ3JhbCB0eXBlcyB0aGF0IO+sgXQgaW50byBvbmUgb2YgdGhlIGdlbmVyYWwgcHVycG9zZSByZWdpc3RlcnMuIildKSwgX3ZtLl92KCIgIiksIF9jKCdsaScsIFtfdm0uX3YoIlNTRSBUaGUgY2xhc3MgY29uc2lzdHMgb2YgdHlwZXMgdGhhdCDvrIF0IGludG8gYSB2ZWN0b3IgcmVnaXN0ZXIuIildKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3AnLCBbX3ZtLl92KCLov5nmrrXor53lkoznm7jlhbPmsYfnvJbku6PnoIHln7rmnKzljbDor4HkuobmiJHnmoTnjJzmtYvjgILkuLrkuobov5vkuIDmraXpqozor4HvvIzmiJHogIPomZHmiYvlt6XmlLnkuIDkuIvmsYfnvJbku6PnoIHvvIzlsIZtb3ZzZCAuTEMwKCVyaXApLCAleG1tMOaUueS4uuWwhuaVsOaNrumAgeWFpXJzae+8iOWFtuS9jjMy5L2N5bCx5pivZXNp77yJ77yM5L+u5pS55ZCO5Luj56CB5aaC5LiL77yM5rOo5oSP56ysMTPooYzku6PnoIHmmK/miJHkv67mlLnov4fnmoTvvJoiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIgogIH0sIFtfYygncHJlJywgewogICAgcHJlOiB0cnVlLAogICAgYXR0cnM6IHsKICAgICAgImNsYXNzIjogImxhbmd1YWdlLXRleHQiCiAgICB9CiAgfSwgW19jKCdjb2RlJywgW192bS5fdigiLmZpbGUgICBcImRvdWJsZV9hc19pbnQuY1wiXG4uc2VjdGlvbiAgICAucm9kYXRhLnN0cjEuMSxcImFNU1wiLEBwcm9nYml0cywxXG4uTEMxOlxuLnN0cmluZyBcImEgPSAlZFxcblwiXG4udGV4dFxuLmdsb2JsIG1haW5cbi50eXBlICAgbWFpbiwgQGZ1bmN0aW9uXG5tYWluOlxuLkxGQjExOlxuLmNmaV9zdGFydHByb2NcbnN1YnEgICAgJDgsICVyc3Bcbi5jZmlfZGVmX2NmYV9vZmZzZXQgMTZcbm1vdnEgICAgLkxDMCglcmlwKSwgJXJzaVxubW92bCAgICAkLkxDMSwgJWVkaVxubW92bCAgICAkMSwgJWVheFxuY2FsbCAgICBwcmludGZcbmFkZHEgICAgJDgsICVyc3Bcbi5jZmlfZGVmX2NmYV9vZmZzZXQgOFxucmV0IFxuLmNmaV9lbmRwcm9jXG4uTEZFMTE6XG4uc2l6ZSAgIG1haW4sIC4tbWFpblxuLnNlY3Rpb24gICAgLnJvZGF0YS5jc3Q4LFwiYU1cIixAcHJvZ2JpdHMsOFxuLmFsaWduIDhcbi5MQzA6XG4ubG9uZyAgIDAgICBcbi5sb25nICAgMTA3NjEwMTEyMFxuLmlkZW50ICBcIkdDQzogKEdOVSkgNC40LjYgMjAxMjAzMDUgKFJlZCBIYXQgNC40LjYtNClcIlxuLnNlY3Rpb24gICAgLm5vdGUuR05VLXN0YWNrLFwiXCIsQHByb2diaXRzXG4iKV0pXSldKSwgX2MoJ3AnLCBbX3ZtLl92KCLnvJbor5Hov5nmrrXmsYfnvJbku6PnoIHmiafooYzvvIzmnpznhLbnu5Pmnpzlm7rlrprkuLow77yaIildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW19jKCdpbWcnLCB7CiAgICBhdHRyczogewogICAgICAic3JjIjogImh0dHA6Ly9oLm5vbmxlZS5jb206OTAwOS9ub25sZWUvMjAyMzA0MTkxOTE0MDAucG5nIiwKICAgICAgImFsdCI6ICIiCiAgICB9CiAgfSldKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigi5pyA5ZCO77yM5oiR55SoLW0zMuaMh+S7pOe8luivkeaIkDMy5L2N5Luj56CB77yM57uT5p6c5Lmf5Zu65a6a5Li6MO+8jOW5tuS4lOaxh+e8luS7o+eggeS4reayoeacieeci+WIsG1teOebuOWFs+WvhOWtmOWZqOeahOS9v+eUqOOAgueEtuWQju+8jOaIkeaJi+W3peeUqG1vdmzlsIYxMjM0NemAgeWFpWVzae+8jOe7k+aenOS4uui+k+WHuuaAu+S4ujEyMzQ177yM6K+B5piOcHJpbnRm6buY6K6k6K6k5Li656ys5LiA5LiqaW505Y+C5pWw5pS+5ZyoZXNp5Lit44CC6Iez5q2k6Zeu6aKY5Y6f5Zug5Z+65pys56Gu5a6a44CCIildKSwgX3ZtLl92KCIgIiksIF9jKCdoMycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICLmgLvnu5MiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiPmgLvnu5MiCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIOaAu+e7kyIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfdm0uX3YoIuS7juS4iui/sOi/h+eoi+efpemBk++8jOacgOWIneeahOeslOivleS7o+egge+8jOWcqDY05L2N546v5aKD5LiL77yM5rWu54K55pWw5Y+C5pWw6KKr6YCB5YWlbW145a+E5a2Y5Zmo77yM6ICMJWTlkYror4lwcmludGbnrKzkuIDkuKrlj4LmlbDkuLppbnTnsbvlnovvvIzmiYDku6VwcmludGbku43nhLbljrvpu5jorqTnmoRlc2nkuK3lr7vmib7nrKzkuIDkuKppbnTlj4LmlbDvvIzmiYDku6Xku45lc2nkuK3or7vlj5bkuobkuIDkuKrmnKrnoa7lrprnmoQzMmJpdOaVsOaNruW5tuaMiWludOino+mHiu+8jOacgOe7iOmAoOaIkOe7k+aenOeahOS4jeehruWumuOAgiIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfdm0uX3YoIuaJgOS7pei/memBk+mimOeahOato+ehruetlOahiO+8iOWwj+err+W6j++8ieaYr++8jOWcqDMy5L2N5LiL77yM6L6T5Ye65Li64oCcYSA9IDDigJ3vvJvlnKg2NOS9jeWQr+eUqFNJTUTmg4XlhrXkuIvvvIzovpPlh7rnu5PmnpzkuI3noa7lrprjgIIiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3AnLCBbX3ZtLl92KCLnibnliKvpnIDopoHor7TmmI7nmoTmmK/vvIznlLHkuo7msYfnvJbku6PnoIHlnKjkuI3lkIxDUFXjgIHkuI3lkIzmk43kvZzns7vnu5/jgIHkuI3lkIxnY2PpgInpobnkuIvlj6/og73kvJrmnInlt67lvILvvIzmiYDku6XkvaDlvpfliLDnmoTmsYfnvJbku6PnoIHmnKrlv4XlkozmiJHnmoTnm7jlkIzvvIzkvYbljp/lm6DmmK/kuIDoh7TnmoTvvJo2NOS9jeeOr+Wig+S4i2ludOWSjGRvdWJsZeaUvue9rueahOS9jee9ruS4jeWQjO+8jGRvdWJsZeWRiuiviWHmlL7liLDkuIDkuKrlnLDmlrnvvIzogIwlZOWRiuiviXByaW50ZuWIsOWPpuS4gOS4quWcsOaWueWPluaVsOaNru+8jOe7k+aenOiHqueEtuaXoOazleWPluWIsOWPmOmHj2HjgIIiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3AnLCBbX3ZtLl92KCLnlLHmraTkuZ/lj6/ku6XnnIvlh7rvvIxwcmludGbmnIDlpb3kuI3opoHlsIbljaDkvY3nrKblkozlrp7pmYXlj4LmlbDorr7kuLrkuI3lkIznmoTnsbvlnovvvIzlm6DkuLrov5nmoLfkvJrpgKDmiJDkuI3lj6/pooTmlpnnmoTnu5PmnpzjgIIiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2gzJywgewogICAgYXR0cnM6IHsKICAgICAgImlkIjogIuWPguiAg+aWh+eMriIKICAgIH0KICB9LCBbX2MoJ2EnLCB7CiAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiI+WPguiAg+aWh+eMriIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIg5Y+C6ICD5paH54yuIildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigiU3lzdGVtIFYgQXBwbGljYXRpb24gQmluYXJ5IEludGVyZmFjZSBBTUQ2NCBBcmNoaXRlY3R1cmUgUHJvY2Vzc29yIFN1cHBsZW1lbnQiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3AnLCBbX3ZtLl92KCJJRUVFIDc1NDogU3RhbmRhcmQgZm9yIEJpbmFyeSBGbG9hdGluZy1Qb2ludCBBcml0aG1ldGljIildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW19jKCdhJywgewogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiaHR0cDovL3d3dy5jcy52aXJnaW5pYS5lZHUvfmV2YW5zL2NzMjE2L2d1aWRlcy94ODYuaHRtbCIsCiAgICAgICJ0aXRsZSI6ICLljp/mlofpk77mjqUiLAogICAgICAidGFyZ2V0IjogIl9ibGFuayIsCiAgICAgICJyZWwiOiAibm9vcGVuZXIgbm9yZWZlcnJlciIKICAgIH0KICB9LCBbX3ZtLl92KCJ4ODYgQXNzZW1ibHkgR3VpZGUiKSwgX2MoJ091dGJvdW5kTGluaycpXSwgMSldKV0pOwp9Owp2YXIgc3RhdGljUmVuZGVyRm5zID0gW107CmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH07"},{"version":3,"names":["render","_vm","_c","_self","attrs","$parent","slotKey","_v","staticClass","pre","staticRenderFns"],"sources":["D:/work/blog/docs/handbook/x86-64体系下一个奇怪问题的定位.md"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('ContentSlotsDistributor',{attrs:{\"slot-key\":_vm.$parent.slotKey}},[_c('p',[_vm._v(\"作者：张洋\")]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"http://blog.codinglabs.org/articles/trouble-of-x86-64-platform.html\",\"title\":\"原文链接\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"原文链接\"),_c('OutboundLink')],1)]),_vm._v(\" \"),_c('p',[_vm._v(\"问题来源于一个朋友在百度的笔试题。上周六我一个朋友参加了百度举行的专场招聘会，其中第一道笔试题是这样的：\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"给出下面一段代码\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#给出下面一段代码\"}},[_vm._v(\"#\")]),_vm._v(\" 给出下面一段代码\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"#include <stdio.h>\\nmain() {\\n    double a = 10; \\n    printf(\\\"a = %d\\\\n\\\", a); \\n}\\n\")])])]),_c('p',[_vm._v(\"请问代码的运行结果以及原因。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"当朋友参加完笔试和我聊起这道题时，我第一反应是这道题考察的是浮点数的内存表示，当然，在不同的CPU体系下，运行结果可能会有所不同，主要是受CPU位数和字节序的影响。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"最初分析\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#最初分析\"}},[_vm._v(\"#\")]),_vm._v(\" 最初分析\")]),_vm._v(\" \"),_c('p',[_vm._v(\"不妨以目前最普遍的x86-64体系（64位，小端序）考虑此问题。在64位机器上，double是符合IEEE754标准的双精度浮点数。根据IEEE标准，双精度浮点数由8个字节共64位组成，其中最高位为符号位，次高的11位为指数位，余下的52位为尾数位。示意见下图：\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"http://h.nonlee.com:9009/nonlee/20230419191219.png\",\"alt\":\"\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"各位段意义如下：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"S = 0表示正数，S = 1表示负数。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"E可以看成一个无符号整数，当其二进制位为全0或全1时，表示非规约浮点数或特殊值，此处不讨论，仅讨论其不全为0或全为1的情况。当E不全为零或全为1时，浮点数是规约的，此时E表示以2为底的指数加上一个固定的偏移量。偏移量被定义为2(E)−1−1，其中(E)表示E所占的比特数，此处为11，所以偏移量为2(11)−1−1=1023。因此实际的指数值要在E的基础上减1023，例如E的位表示是10000000000（十进制1024），则表示实际指数值为1024−1023=1。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"M在规约形式下，表示一个二进制小数，实际值是这个小数加1。例如，M=101000…0表示2−1+2−3+1=1.625。\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"一个规约的IEEE双精度浮点数的实际值为：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-math extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"V=(−1)S×2E−1023×(1+M)\\n\")])])]),_c('p',[_vm._v(\"根据以上分析，10可以表示为1.25×8，因此取S = 0，E = 10000000010，M = 0100…0，则整个浮点数的二进制表示为：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"01000000, 00100100, 00000000, 00000000, 00000000, 00000000, 00000000, 00000000\\n\")])])]),_c('p',[_vm._v(\"为了便于观察我在每8bit之间插入了分隔符。当printf使用“%d”输出时，由于int类型是4字节，所以只能取其中四个字节。当a被当做参数传递给printf时，有两种可能保存a的地方：寄存器或栈帧中。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"如果是寄存器，则printf会取低四字节。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"如果是栈，在小端序中，高字节存放在高地址，低字节放在低地址，而栈是从高地址向低地址增长的，所以入栈后每个字节的位置如下：\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"http://h.nonlee.com:9009/nonlee/20230419191302.png\",\"alt\":\"\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"printf会从低地址到高地址读取4个字节当做int型数据去解释并输出，所以，经过分析这段代码的输出应该为“a = 0”。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"奇怪的结果\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#奇怪的结果\"}},[_vm._v(\"#\")]),_vm._v(\" 奇怪的结果\")]),_vm._v(\" \"),_c('p',[_vm._v(\"分析完了，下一步当然是通过实践验证，我在我的VPS上（CentOS 64位）用gcc编译。结果非常出乎意料，不但不是0，而且每次运行的结果都不一样！（见下图）\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"http://h.nonlee.com:9009/nonlee/20230419191329.png\",\"alt\":\"\"}})]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"定位问题\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#定位问题\"}},[_vm._v(\"#\")]),_vm._v(\" 定位问题\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在试图解释这个奇怪现象时，我最初从C的层面上进行了诸多分析，结果都无法分析出问题所在，所以我怀疑出现这个问题的原因在机器代码层面。于是我将其汇编代码打出来：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\".file   \\\"double_as_int.c\\\"\\n.section    .rodata.str1.1,\\\"aMS\\\",@progbits,1\\n.LC1:\\n.string \\\"a = %d\\\\n\\\"\\n.text\\n.globl main\\n.type   main, @function\\nmain:\\n.LFB11:\\n.cfi_startproc\\nsubq    $8, %rsp\\n.cfi_def_cfa_offset 16\\nmovsd   .LC0(%rip), %xmm0\\nmovl    $.LC1, %edi\\nmovl    $1, %eax\\ncall    printf\\naddq    $8, %rsp\\n.cfi_def_cfa_offset 8\\nret \\n.cfi_endproc\\n.LFE11:\\n.size   main, .-main\\n.section    .rodata.cst8,\\\"aM\\\",@progbits,8\\n.align 8\\n.LC0:\\n.long   0   \\n.long   1076101120\\n.ident  \\\"GCC: (GNU) 4.4.6 20120305 (Red Hat 4.4.6-4)\\\"\\n.section    .note.GNU-stack,\\\"\\\",@progbits\\n\")])])]),_c('p',[_vm._v(\"为了方便对比，我重新写了下面的C代码：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"#include <stdio.h>\\n \\nmain() {\\n    int a = 10; \\n    printf(\\\"a = %d\\\\n\\\", a); \\n}\\n\")])])]),_c('p',[_vm._v(\"其汇编为：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\".file   \\\"int_as_int.c\\\"\\n.section    .rodata.str1.1,\\\"aMS\\\",@progbits,1\\n.LC0:\\n.string \\\"a = %d\\\\n\\\"\\n.text\\n.globl main\\n.type   main, @function\\nmain:\\n.LFB11:\\n.cfi_startproc\\nsubq    $8, %rsp\\n.cfi_def_cfa_offset 16\\nmovl    $10, %esi\\nmovl    $.LC0, %edi\\nmovl    $0, %eax\\ncall    printf\\naddq    $8, %rsp\\n.cfi_def_cfa_offset 8\\nret \\n.cfi_endproc\\n.LFE11:\\n.size   main, .-main\\n.ident  \\\"GCC: (GNU) 4.4.6 20120305 (Red Hat 4.4.6-4)\\\"\\n.section    .note.GNU-stack,\\\"\\\",@progbits\\n\")])])]),_c('p',[_vm._v(\"将注意力集中在main函数中调用printf之前的行为，可以看到，在第一段代码中，LC0有个常数1076101120，将其转换为二进制刚好是我们上面分析的双精度10的二进制表示，而汇编代码将这个数送入了一个叫xmm0寄存器。通过查阅x86-64处理器的相关资料，知道这个寄存器和SIMD（单指令多数据流）扩展指令集有关。简单来说，在64位操作系统下，x86-64通过SIMD机制提高浮点运算能力，所以double类型的a被送入了xmm0（SIMD会用到8个128bit寄存器，xmm0 - xmm7）。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"对比一下第二段代码，当a被声明是int类型时，立即数10被送入了esi（一个通用寄存器，在64位CPU中表示rsi的低32位）。其它部分似乎没有区别。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"通过对比，我猜测64位操作系统下由于启用了SIMD，浮点数会被送入mmx寄存器，而整形会被送入通用寄存器。为了证实我的想法，我查阅了x86-64的ABI文档，在“3.2.3 Parameter Passing”一小节找到了如下的文字：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"INTEGER This class consists of integral types that ﬁt into one of the general purpose registers.\")]),_vm._v(\" \"),_c('li',[_vm._v(\"SSE The class consists of types that ﬁt into a vector register.\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"这段话和相关汇编代码基本印证了我的猜测。为了进一步验证，我考虑手工改一下汇编代码，将movsd .LC0(%rip), %xmm0改为将数据送入rsi（其低32位就是esi），修改后代码如下，注意第13行代码是我修改过的：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\".file   \\\"double_as_int.c\\\"\\n.section    .rodata.str1.1,\\\"aMS\\\",@progbits,1\\n.LC1:\\n.string \\\"a = %d\\\\n\\\"\\n.text\\n.globl main\\n.type   main, @function\\nmain:\\n.LFB11:\\n.cfi_startproc\\nsubq    $8, %rsp\\n.cfi_def_cfa_offset 16\\nmovq    .LC0(%rip), %rsi\\nmovl    $.LC1, %edi\\nmovl    $1, %eax\\ncall    printf\\naddq    $8, %rsp\\n.cfi_def_cfa_offset 8\\nret \\n.cfi_endproc\\n.LFE11:\\n.size   main, .-main\\n.section    .rodata.cst8,\\\"aM\\\",@progbits,8\\n.align 8\\n.LC0:\\n.long   0   \\n.long   1076101120\\n.ident  \\\"GCC: (GNU) 4.4.6 20120305 (Red Hat 4.4.6-4)\\\"\\n.section    .note.GNU-stack,\\\"\\\",@progbits\\n\")])])]),_c('p',[_vm._v(\"编译这段汇编代码执行，果然结果固定为0：\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"http://h.nonlee.com:9009/nonlee/20230419191400.png\",\"alt\":\"\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"最后，我用-m32指令编译成32位代码，结果也固定为0，并且汇编代码中没有看到mmx相关寄存器的使用。然后，我手工用movl将12345送入esi，结果为输出总为12345，证明printf默认认为第一个int参数放在esi中。至此问题原因基本确定。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"总结\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#总结\"}},[_vm._v(\"#\")]),_vm._v(\" 总结\")]),_vm._v(\" \"),_c('p',[_vm._v(\"从上述过程知道，最初的笔试代码，在64位环境下，浮点数参数被送入mmx寄存器，而%d告诉printf第一个参数为int类型，所以printf仍然去默认的esi中寻找第一个int参数，所以从esi中读取了一个未确定的32bit数据并按int解释，最终造成结果的不确定。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"所以这道题的正确答案（小端序）是，在32位下，输出为“a = 0”；在64位启用SIMD情况下，输出结果不确定。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"特别需要说明的是，由于汇编代码在不同CPU、不同操作系统、不同gcc选项下可能会有差异，所以你得到的汇编代码未必和我的相同，但原因是一致的：64位环境下int和double放置的位置不同，double告诉a放到一个地方，而%d告诉printf到另一个地方取数据，结果自然无法取到变量a。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"由此也可以看出，printf最好不要将占位符和实际参数设为不同的类型，因为这样会造成不可预料的结果。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"参考文献\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#参考文献\"}},[_vm._v(\"#\")]),_vm._v(\" 参考文献\")]),_vm._v(\" \"),_c('p',[_vm._v(\"System V Application Binary Interface AMD64 Architecture Processor Supplement\")]),_vm._v(\" \"),_c('p',[_vm._v(\"IEEE 754: Standard for Binary Floating-Point Arithmetic\")]),_vm._v(\" \"),_c('p',[_c('a',{attrs:{\"href\":\"http://www.cs.virginia.edu/~evans/cs216/guides/x86.html\",\"title\":\"原文链接\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"x86 Assembly Guide\"),_c('OutboundLink')],1)])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"mappings":"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"}]}